#include <BfButton.h>
#include <Wire.h>

int btnPin = 2; // GPIO #3-Push button on encoder
int DT = 3;     
int CLK = 4;   
BfButton btn(BfButton::STANDALONE_DIGITAL, btnPin, true, LOW);

int counter = 0;
int angle = 0;
int aState;
int aLastState;
bool state_btn = false;
char btn_state = 'P';

void pressHandler(BfButton *btn, BfButton::press_pattern_t pattern) {
  switch (pattern) {
    case BfButton::SINGLE_PRESS:
      state_btn = true;
      break;

  }
}

void setup() {
  Serial.begin(9600);
  pinMode(CLK, INPUT_PULLUP);
  pinMode(DT, INPUT_PULLUP);
  aLastState = digitalRead(CLK);

  btn.onPress(pressHandler);

  Wire.begin(4);                  
  Wire.onRequest(requestEvent); 
}

void loop() {
  btn.read();
  aState = digitalRead(CLK);

  if (aState != aLastState) {
    if (digitalRead(DT) != aState) {
      counter++;
      angle++;
    } else {
      counter--;
      angle--;
    }
    if (counter >= 100) {
      counter = 100;
    }
    if (counter <= -100) {
      counter = -100;
    }
    Serial.println(counter);
  }
  aLastState = aState;
}

void requestEvent() {
  Wire.write(angle); 
  if (state_btn == true){
    Wire.write(btn_state);
    state_btn = false;
  }
 
}
